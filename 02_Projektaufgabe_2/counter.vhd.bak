--------------------------------------------------
-- Author: 				Steve Wagner
-- Matrikelnummer: 	175309
-- Datum: 				13/11/2015
-- Brief:				Counter for second's unit
--------------------------------------------------
-- Library Declaration --
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std;

--------------------------------------------
--	   SUB ENTITY                          --
--------------------------------------------
ENTITY unitSec IS
PORT(
	clrBtn			:IN			std_logic; --Clear
	secBtn			:IN			std_logic; --Button for programming the second
--	clk				:IN			std_logic; --Clock 1Hz
	start				:IN			std_logic; --Start/Stop
	utSec				:IN			std_logic; --Switch for programming the unit or ten of second
	--Output for second's units
	b0_us				:OUT		std_logic; --LSB
	b1_us				:OUT		std_logic;
	b2_us				:OUT		std_logic;
	b3_us				:OUT		std_logic;  --MSB
	--Value at number fo the second's units
	uCountSec		:OUT 		INTEGER
	
	
	);
END unitSec;

--------------------------------------------
--        ARCHITECTURE	                  --
--------------------------------------------
ARCHITECTURE Behaviour OF unitSec IS
-- Interne signal declaration --
--SIGNAL clk			:std_logic; --Clock 1Hz
SIGNAL uCountIntern :INTEGER :=0;


--COMPONENT freq1Hz
--PORT(
--	start				:IN			std_logic; --Start/Stop
--	clearBtn			:IN			std_logic; --Clear
--	clk1Hz			:OUT			std_logic --Clock 1Hz	
--	);
--END COMPONENT;

BEGIN

-- Count second Process --
count_sec_proc : PROCESS (utSec, secBtn, clrBtn)
	BEGIN
		-- stop AND programming of the second's unit and tast of second's button and cleqr's button not tast
		IF (start='0') AND (utSec = '0') AND (secBtn = '1') AND (clrBtn='0')THEN -- Programming of the second's unit
			uCountIntern<=uCountIntern+1;
			
			IF (uCountIntern=9) THEN
				uCountIntern<=0;		
			END IF;
			
				
		--clear -> reset the value of the counters
		ELSIF (clrBtn='1') THEN
			uCountIntern<=0;
			
		ELSE
		END IF;
		
		--Save the value
		uCountSec<=uCountIntern;
		
END PROCESS count_sec_proc;

-- Convert the value of counter to binary --
count_sec_bin : PROCESS (uCountIntern)
	BEGIN
		case uCountIntern IS
			--Counter = 0 --
			WHEN 0 =>
				b3_us <= '0';
				b2_us <= '0';
				b1_us <= '0';
				b0_us <= '0';
		
			--Counter = 1 --
			WHEN 1 =>
				b3_us <= '0';
				b2_us <= '0';
				b1_us <= '0';
				b0_us <= '1';
				
			--Counter = 2 --
			WHEN 2 =>
				b3_us <= '0';
				b2_us <= '0';
				b1_us <= '1';
				b0_us <= '0';
				
			--Counter = 3 --
			WHEN 3 =>
				b3_us <= '0';
				b2_us <= '0';
				b1_us <= '1';
				b0_us <= '1';
				
			--Counter = 4 --
			WHEN 4 =>
				b3_us <= '0';
				b2_us <= '1';
				b1_us <= '0';
				b0_us <= '0';
				
			--Counter = 5 --
			WHEN 5 =>
				b3_us <= '0';
				b2_us <= '1';
				b1_us <= '0';
				b0_us <= '1';
				
			--Counter = 6 --
			WHEN 6 =>
				b3_us <= '0';
				b2_us <= '1';
				b1_us <= '1';
				b0_us <= '0';
				
			--Counter = 7 --
			WHEN 7 =>
				b3_us <= '0';
				b2_us <= '1';
				b1_us <= '1';
				b0_us <= '1';
				
			--Counter = 8 --
			WHEN 8 =>
				b3_us <= '1';
				b2_us <= '0';
				b1_us <= '0';
				b0_us <= '0';
				
			--Counter = 9 --
			WHEN 9 =>
				b3_us <= '1';
				b2_us <= '0';
				b1_us <= '0';
				b0_us <= '1';
				
			WHEN others =>
		END CASE;
END PROCESS count_sec_bin;


-- Instantiation of the component declared above in the architecture with the entity 
--timing: COMPONENT freq1Hz
--PORT MAP(
--		 start => start,
--		 clearBtn => clrBtn,
--		 clk1Hz => clk
--		);



END Behaviour;